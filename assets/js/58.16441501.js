(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{367:function(t,a,e){"use strict";e.r(a);var r=e(28),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"旋转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#旋转"}},[t._v("#")]),t._v(" 旋转")]),t._v(" "),e("p",[t._v("旋转分量以度为单位定义实体的方向。它以俯仰（x），偏航（y）和横滚（z）作为三个以空格分隔的数字来指示旋转程度。")]),t._v(" "),e("p",[t._v("所有实体固有地具有旋转分量。")]),t._v(" "),e("h2",{attrs:{id:"例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[t._v("#")]),t._v(" 例")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<a-entity rotation="45 90 180"></a-entity>\n\n')])])]),e("h2",{attrs:{id:"值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#值"}},[t._v("#")]),t._v(" 值")]),t._v(" "),e("p",[t._v("A框架使用右手坐标系。将右手的拇指与正轴对齐时，我们的手会向正旋转方向卷曲。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("轴")]),t._v(" "),e("th",[t._v("描述")]),t._v(" "),e("th",[t._v("默认值")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("X")]),t._v(" "),e("td",[t._v("俯仰，绕X轴旋转。")]),t._v(" "),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[t._v("ÿ")]),t._v(" "),e("td",[t._v("偏航，绕Y轴旋转。")]),t._v(" "),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[t._v("ž")]),t._v(" "),e("td",[t._v("绕Z轴滚动。")]),t._v(" "),e("td",[t._v("0")])])])]),t._v(" "),e("h2",{attrs:{id:"相对旋转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相对旋转"}},[t._v("#")]),t._v(" 相对旋转")]),t._v(" "),e("p",[t._v("子实体继承自父实体的世界空间旋转。考虑以下场景：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<a-entity id="parent" rotation="0 45 0">\n  <a-entity id="child1"></a-entity>\n  <a-entity id="child2" rotation="15 45 30"></a-entity>\n</a-entity>\n')])])]),e("p",[t._v("#child1的世界空间旋转将由0 45 0实体继承。在本地父级的空间中，#child1旋转度为0 0 0。")]),t._v(" "),e("p",[t._v("通过将旋转与父实体结合起来，#child2的世界空间旋转将为15 90 30。在父级的本地空间中，其#child2旋转角度为15 45 30。")]),t._v(" "),e("h2",{attrs:{id:"更新旋转"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新旋转"}},[t._v("#")]),t._v(" 更新旋转")]),t._v(" "),e("p",[t._v("为了提高性能和人体工程学，我们建议直接通过three.js Object3D .rotation Euler（以弧度为单位）而不是 via来.setAttribute更新旋转。")]),t._v(" "),e("p",[t._v("此方法更容易，因为我们可以访问所有Euler实用程序，并且通过跳过.setAttribute开销并且不需要创建用于设置旋转的对象来更快地进行访问：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// With three.js\nel.object3D.rotation.set(\n  THREE.Math.degToRad(15),\n  THREE.Math.degToRad(30),\n  THREE.Math.degToRad(90)\n);\nel.object3D.rotation.x += Math.PI;\n\n// With .setAttribute (less recommended).\nel.setAttribute('rotation', {x: 15, y: 30, z: 90});\n")])])]),e("h2",{attrs:{id:"旋转-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#旋转-2"}},[t._v("#")]),t._v(" 旋转")]),t._v(" "),e("p",[t._v("进行时，Three.js级别的更新仍将反映在A-Frame中 ```\nentityEl.getAttribute('rotation');。调用时.getAttribute('rotation')，A-Frame将从弧度和度转换并返回具有x / y / z属性的普通JavaScript对象。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("另请参阅相机的读取位置和旋转。\n\n## 转换顺序\n转换按以下顺序应用于实体：\n\n规模\n回转\n位置/翻译")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);