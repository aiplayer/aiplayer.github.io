(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{306:function(t,e,a){"use strict";a.r(e);var n=a(28),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"用户界面和自定义事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户界面和自定义事件"}},[t._v("#")]),t._v(" 用户界面和自定义事件")]),t._v(" "),a("p",[t._v("为了使基于AR.js的Web App更好看并添加UI功能，可以将其视为通用网站。在这里，您将学习如何将Raycaster，自定义事件和交互与覆盖的DOM元素一起使用。")]),t._v(" "),a("p",[t._v("首先，介绍一下点击交互：可以使用我们测试过的A-Frame直接点击内容，并使用version获得良好的效果0.9.2。请记住，点击（或触摸互动）不是很可靠：如果您")]),t._v(" "),a("p",[t._v("只需要点击几下，不是很可靠\n必须点击屏幕上很少的实体\n单击仅在屏幕中心起作用，而不是在角度上起作用，因此请注意，要单击的实体应足够大且不能放在角度上。\n永远记住，AR.js是Web AR，这意味着您可以使用任何想要的DOM元素交互。这样的交互可以完美地工作，并且在大多数情况下，Overlayed DOM内容交互足以满足常见需求。")]),t._v(" "),a("h2",{attrs:{id:"处理对ar内容的点击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理对ar内容的点击"}},[t._v("#")]),t._v(" 处理对AR内容的点击")]),t._v(" "),a("p",[t._v("遵循A-Frame文档，我们可以通过Raycaster使用点击/触摸交互。")]),t._v(" "),a("p",[t._v("我们可以为任何a框架实体注册事件监听器。因此，该方法也适用于基于标记，基于图像跟踪和基于位置的情况。我们将在基于位置的示例中进行展示，并注册点击a-entity-可以使用a-marker或进行相同的操作a-nft。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf-8" />\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <title>Click Location Based Example</title>\n    <script src="https://aframe.io/releases/0.9.2/aframe.min.js"><\/script>\n    <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar-nft.js"><\/script>\n  </head>\n\n  <script>\n    // here we register che \'clickhandler\' component\n    AFRAME.registerComponent("clickhandler", {\n      init: function() {\n        // we add the click event listener to any instance of this component\n        this.el.addEventListener("click", () => {\n          alert("Clicked!");\n        });\n      }\n    });\n  <\/script>\n\n  <body style="margin: 0; overflow: hidden;">\n    \x3c!-- with cursor and raycaster, we define a raycaster handler.\n    With \'raycaster\' we add a CSS selector to match the only elements that will react to click events,\n    for performances reasons. See: (https://aframe.io/docs/1.0.0/introduction/interactions-and-controllers.html) --\x3e\n    <a-scene\n      cursor="rayOrigin: mouse; fuse: true; fuseTimeout: 0;"\n      raycaster="objects: [clickhandler];"\n      vr-mode-ui="enabled: false"\n      embedded\n      arjs="sourceType: webcam; debugUIEnabled: false;"\n    >\n      \x3c!-- this entity, potentially every other on the a-scene, has the \'clickhandler\' component\n      and will behave has we have defined: it will handle click events! --\x3e\n      <a-box\n        clickhandler\n        material="color: red;"\n        scale="20 20 20"\n        gps-entity-place="latitude: <your-latitude>; longitude: <your-longitude>;"\n      >\n      </a-box>\n\n      <a-camera gps-camera rotation-reader> </a-camera>\n    </a-scene>\n  </body>\n</html>\n')])])]),a("p",[t._v("您可以对图像跟踪a-nft和基于标记的a-entity元素使用这种精确的方法。该clickhandler名称可以自定义，你可以选择一个你最喜欢的，它只是一个参考。")]),t._v(" "),a("p",[t._v("请记住，这种单击/触摸交互根本不是由AR.js处理的，它全部基于A-Frame。请始终查看A-Frame文档以获取更多详细信息。")]),t._v(" "),a("h2",{attrs:{id:"与叠加的dom内容进行交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与叠加的dom内容进行交互"}},[t._v("#")]),t._v(" 与叠加的DOM内容进行交互")]),t._v(" "),a("p",[t._v("您可以通过在上添加DOM HTML元素来添加交互body。例如，从此示例开始：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html>\n  <script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n  \x3c!-- we import arjs version without NFT but with marker + location based support --\x3e\n  <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js"><\/script>\n  <body style="margin : 0px; overflow: hidden;">\n    <a-scene embedded arjs>\n      <a-marker preset="hiro">\n        <a-entity\n          position="0 0 0"\n          scale="0.05 0.05 0.05"\n          gltf-model="https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf"\n        ></a-entity>\n      </a-marker>\n      <a-entity camera></a-entity>\n    </a-scene>\n  </body>\n</html>\n')])])]),a("p",[t._v("我们可以在之外添加身体a-scene：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="buttons">\n  <button class="say-hi-button"></button>\n</div>\n')])])]),a("p",[t._v("然后，我们需要添加一些CSS以绝对定位DIV和BUTTON，还需要添加一些脚本来侦听click事件。")]),t._v(" "),a("p",[t._v("您可以自定义您a-scene或自己的内容，例如3D模型，播放视频等。有关如何更改实体属性和如何使用事件的信息，请参见A-Frame文档：https：//aframe.io/docs/1.0.0/introduction/javascript-events-dom-apis.html。")]),t._v(" "),a("p",[t._v("我们将最终得到以下代码：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<!DOCTYPE html>\n<html>\n  <script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n  \x3c!-- we import arjs version without NFT but with marker + location based support --\x3e\n  <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.js"><\/script>\n  <script>\n    window.onload = function() {\n      document\n        .querySelector(".say-hi-button")\n        .addEventListener("click", function() {\n          // here you can change also a-scene or a-entity properties, like\n          // changing your 3D model source, size, position and so on\n          // or you can just open links, trigger actions...\n          alert("Hi there!");\n        });\n    };\n  <\/script>\n  <style>\n    .buttons {\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 5em;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 10;\n    }\n\n    .say-hi-button {\n      padding: 0.25em;\n      border-radius: 4px;\n      border: none;\n      background: white;\n      color: black;\n      width: 4em;\n      height: 2em;\n    }\n  </style>\n  <body style="margin : 0px; overflow: hidden;">\n    <div class="buttons">\n      <button class="say-hi-button">SAY HI!</button>\n    </div>\n    <a-scene embedded arjs>\n      <a-marker preset="hiro">\n        <a-entity\n          position="0 0 0"\n          scale="0.05 0.05 0.05"\n          gltf-model="https://arjs-cors-proxy.herokuapp.com/https://raw.githack.com/AR-js-org/AR.js/master/aframe/examples/image-tracking/nft/trex/scene.gltf"\n        ></a-entity>\n      </a-marker>\n      <a-entity camera></a-entity>\n    </a-scene>\n  </body>\n</html>\n')])])]),a("h2",{attrs:{id:"自订活动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自订活动"}},[t._v("#")]),t._v(" 自订活动")]),t._v(" "),a("p",[t._v("AR.js调度几个自定义事件。")]),t._v(" "),a("p",[t._v("其中一些是通用的，另一些是特定于AR功能的。这是完整列表。")]),t._v(" "),a("p",[t._v("自定义事件名称\t描述\t有效载荷\t源文件\t特征\narjs-video-loaded\t将摄像机视频流附加到DOM后触发\t{ detail: { component: "),a("HTMLElement",[t._v(" }}\tthreex-artoolkitsource.js\t所有\ncamera-error\t当无法检索摄像机视频流时触发\t{ error: "),a("Error",[t._v(" }\tthreex-artoolkitsource.js\t所有\ncamera-init\t正确检索摄像机视频流时触发\t{ stream: "),a("MediaStream",[t._v(" }\tthreex-artoolkitsource.js\t所有\nmarkerFound\t当在“基于标记”中找到标记或在“图像跟踪”中找到图片时触发\t--\tcomponent-anchor.js\t仅基于图像跟踪和标记\nmarkerLost\t当“基于标记”中的标记或“图像跟踪”中的图片丢失时触发\t--\tcomponent-anchor.js\t仅基于图像跟踪和标记\ngps-camera-update-positon\tgps-camera更新位置时触发\t{ detail: { position: "),a("GeolocationCoordinates",[t._v(", origin: "),a("GeolocationCoordinates",[t._v(" }}\tgps-camera.js\t仅基于位置\ngps-entity-place-update-positon\tgps-entity-place更新位置时触发\t{ detail: { distance: "),a("Number",[t._v(" }}\tgps-entity-place.js\t仅基于位置\ngps-entity-place-added\tgps-entity-place添加时触发\t{ detail: { component: "),a("HTMLElement",[t._v(" }}\tgps-entity-place.js\t仅基于位置\ngps-camera-origin-coord-set\t设置原点坐标时触发\t--\tgps-camera.js\t仅基于位置\ngps-entity-place-loaded\t触发时触发gps-entity-place-请参阅A框架实体的“加载”事件\t{ detail: { component: "),a("HTMLElement",[t._v(" }}\tgps-entity-place.js\t仅基于位置\n内部加载事件\n⚡️图像跟踪和基于位置都会自动处理内部事件")])],1)],1)],1)],1)],1)],1)],1)],1),t._v(" "),a("p",[t._v("起点位置已设置\n图像跟踪（图像描述符）已完全加载\n并自动从DOM中删除与.arjs-loader选择器匹配的元素。")]),t._v(" "),a("p",[t._v("您可以添加在上述情况下将要删除的任何自定义加载器，只需.arjs-loader在其上使用类即可。")])])}),[],!1,null,null,null);e.default=r.exports}}]);