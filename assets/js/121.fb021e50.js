(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{286:function(a,n,t){"use strict";t.r(n);var e=t(28),s=Object(e.a)({},(function(){var a=this,n=a.$createElement,t=a._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"嵌入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#嵌入"}},[a._v("#")]),a._v(" 嵌入")]),a._v(" "),t("p",[a._v("在本指南中，我们将学习如何将nunuStudio内部创建的应用程序嵌入到网页中。nunuStudio应用程序应在网页内使用，nunuStudio编辑器可以导出已嵌入应用程序且默认情况下具有全屏和vr按钮的网页。")]),a._v(" "),t("p",[a._v("在网页中嵌入应用程序有两个选项，第一个选项可用于使用单行代码快速嵌入应用程序，第二个选项可用于具有页面通信支持或更高级控件的更灵活的方法。")]),a._v(" "),t("h2",{attrs:{id:"快速的方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速的方法"}},[a._v("#")]),a._v(" 快速的方法")]),a._v(" "),t("p",[a._v("这是使nunuStudio应用程序在网页上运行的最快方法，只需在网页中包含nunu.min.js文件，然后创建一个具有ID的画布即可。将NunuApp.loadApp('pong.nsp', 'canvas')行添加到您的body元素onload上，您就完成了，“ pong.nsp”是我们的项目文件的名称，“ canvas”是我们的canvas元素的ID。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<html>\n\t<head>\n\t\t<script src="nunu.min.js"><\/script>\n\t</head>\n\t<body onload="NunuApp.loadApp(\'pong.nsp\', \'canvas\')">\n\t\t<canvas width="800" height="480" id="canvas"></canvas>\n\t</body>\n</html>\n')])])]),t("p",[a._v("如果一切都按预期工作，则应该可以看到运行pong应用程序的窗口。您也可以导入外部应用程序，它们不需要存储在本地。作为示例，如果您更改为NunuApp.loadApp('http://nunustudio.org/examples/files/nunu.nsp', 'canvas')nunu主页，则将加载演示。")]),a._v(" "),t("h2",{attrs:{id:"使用javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用javascript"}},[a._v("#")]),a._v(" 使用JavaScript")]),a._v(" "),t("p",[a._v("首先，我们需要将nunu.min.js文件导入网页，此javascript文件包含运行nunuStudio应用程序所需的所有代码。在包含运行时文件之后，需要画布来显示应用程序，然后将画布添加到您的html代码中。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('\x3c!--Import nunuStudio runtime--\x3e\n<script type="text/javascript" src="nunu.min.js"><\/script>\n\n\x3c!--Canvas used to draw content--\x3e\n<canvas id="canvas"></canvas>\n')])])]),t("h2",{attrs:{id:"nunuapp对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nunuapp对象"}},[a._v("#")]),a._v(" NunuApp对象")]),a._v(" "),t("p",[a._v("现在，使用下面的代码创建一个新的JavaScript脚本，此代码创建一个新的NunuApp实例，该实例将使用提供的画布来呈现该应用程序。")]),a._v(" "),t("p",[a._v("如果您不想立即开始运行应用程序，则可以使用loadProgramAsync（）或loadProgram（）（不建议这样做，直到所有文件加载完毕，此页面才会被阻塞），这些将加载应用程序文件并对其进行解码，但不会开始运行立即应用程序，这可用于将应用程序预加载到网页中，在应用程序加载后，可使用run（）方法启动它，而exit（）方法可用于终止应用程序并处置所有使用的资源。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('var app, canvas;\n\n//Should be called after page load\nfunction initialize()\n{\n\t//Get the canvas that will be used to draw content\n\tcanvas = document.getElementById("canvas");\n\n\t//Create new NunuApp intance\n\tapp = new NunuApp(canvas);\n\n\t//Load and run the "app.nsp" file\n\tapp.loadRunProgram("app.nsp");\n}\n\n//Should be called every time the window is resized\nfunction resize()\n{\n\t//Update canvas width and height attributes\n\tcanvas.width = canvas.offsetWidth;\n\tcanvas.height = canvas.offsetHeight;\n\n\t//Resize app\n\tapp.resize();\n}\n')])])]),t("p",[a._v("要完成此操作，我们需要在页面加载后调用initialize方法，并在每次调整画布大小时调用resize方法。为此，我们可以将下面的代码添加到文档主体声明中。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<body onload="initialize();" onresize="resize();">\n...\n</body>\n')])])]),t("h2",{attrs:{id:"切换全屏和vr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#切换全屏和vr"}},[a._v("#")]),a._v(" 切换全屏和VR")]),a._v(" "),t("p",[a._v("要切换全屏，可以使用app对象中存在的toggleFullscreen方法，对于VR，建议在创建用于切换vr模式的按钮之前先检查浏览器是否支持WebVR以及是否有可用的VRDisplay。要检查对VR的支持，请使用以下代码。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('//Toggle fullscreen mode\nfunction toggleFullscreen()\n{\n\tapp.toggleFullscreen(document.body);\n}\n\n//Toggle VR mode\nfunction toggleVR()\n{\n\tapp.toggleVR();\n}\n\n//Check if VR is available\nif(app.vrAvailable())\n{\n\t//Check if there are displays available add button\n\tNunu.getVRDisplays(function(display)\n\t{\n\t\tbutton = document.getElementById("vr");\n\t\tbutton.style.visibility = "visible";\n\t});\n}\n')])])]),t("h2",{attrs:{id:"添加加载栏"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加加载栏"}},[a._v("#")]),a._v(" 添加加载栏")]),a._v(" "),t("p",[a._v("展台的loadRunProgram（）和loadProgramAsync（）方法提供一个onProgress回调字段，该回调返回一个介于0.0到1.0之间的值，该值指示加载进度，该值可用于控制加载栏。")]),a._v(" "),t("p",[a._v("创建加载条的一种简单方法是添加几个分隔，代码波纹管用于直接从nunuStudio编辑器导出Web项目时创建的默认加载条。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('\x3c!--Loading bar frame--\x3e\n<div style="position:absolute; width:100%; height:7%; left:0%; top:120%; border-style:solid; border-color:#FFFFFF; border-width:2px">\n\t\x3c!--Loading bar--\x3e\n\t<div id="bar" style="position:absolute; width:0%; height:100%; left:0%; top:0%; background-color:#FFFFFF">\n</div>\n')])])]),t("p",[a._v("要控制创建的条，可以使用以下代码。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('//onProgress callback\nvar bar = document.getElementById("bar");\nvar onProgress = function(event)\n{\n\tif(event.lengthComputable)\n\t{\n\t\tvar progress = event.loaded / event.total * 100;\n\t\tbar.style.width = progress + "%";\n\t}\n};\n\n//onLoad callback\nvar onLoad = function(){};\n\n//Load and run nunu app\napp.loadRunProgram("app.nsp", onLoad, onProgress);\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);