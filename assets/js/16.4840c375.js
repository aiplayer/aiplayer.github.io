(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{302:function(t,e,s){"use strict";s.r(e);var n=s(28),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统"}},[t._v("#")]),t._v(" 系统")]),t._v(" "),s("p",[t._v("A-Frame系统中的实体组件的系统模式，提供全球范围内，服务和管理组件的类。它为组件类提供了公共API（方法和属性）。可以通过场景元素访问系统，并且可以帮助组件与全局场景进行交互。")]),t._v(" "),s("p",[t._v("例如，摄像机系统使用摄像机组件管理所有实体，控制哪个摄像机是活动摄像机。")]),t._v(" "),s("h2",{attrs:{id:"注册系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册系统"}},[t._v("#")]),t._v(" 注册系统")]),t._v(" "),s("p",[t._v("系统注册类似于组件。")]),t._v(" "),s("p",[t._v("如果系统名称与组件名称匹配，则该组件对系统的引用为this.system：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("AFRAME.registerSystem（'my-component'，{ \n  schema：{}，   //系统架构。解析为`this.data`。\n\n  初始化：功能（） { //调用场景初始化。  }，\n    \n\n\n  //其他处理程序和方法。\n}）;\n\nAFRAME.registerComponent（'my-component'，{ \n  init：function（） { console .log（this .system）;   } }）;\n")])])]),s("h2",{attrs:{id:"特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("数据")]),t._v(" "),s("td",[t._v("模式提供的数据可在处理程序和方法之间使用。")])]),t._v(" "),s("tr",[s("td",[t._v("埃尔")]),t._v(" "),s("td",[t._v("参考"),s("a-scene",[t._v("。")])],1)]),t._v(" "),s("tr",[s("td",[t._v("图式")]),t._v(" "),s("td",[t._v("行为与组件模式相同。解析为data。")])])])]),t._v(" "),s("h2",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("p",[t._v("系统像组件一样，定义生命周期处理程序。它还可以定义旨在成为公共API的方法。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("在里面")]),t._v(" "),s("td",[t._v("系统初始化时调用一次。用于初始化。")])]),t._v(" "),s("tr",[s("td",[t._v("暂停")]),t._v(" "),s("td",[t._v("场景暂停时调用。用于停止动态行为。")])]),t._v(" "),s("tr",[s("td",[t._v("玩")]),t._v(" "),s("td",[t._v("在场景开始或恢复时调用。用于启动动态行为。")])]),t._v(" "),s("tr",[s("td",[t._v("蜱")]),t._v(" "),s("td",[t._v("如果定义，将在场景的渲染循环的每个刻度上调用。")])])])]),t._v(" "),s("h2",{attrs:{id:"访问系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问系统"}},[t._v("#")]),t._v(" 访问系统")]),t._v(" "),s("p",[t._v("可以通过场景访问实例化的系统：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("document .querySelector（'a-scene'）.systems [systemName];\n")])])]),s("p",[t._v("可通过访问已注册的系统原型AFRAME.systems。")]),t._v(" "),s("h2",{attrs:{id:"模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模式"}},[t._v("#")]),t._v(" 模式")]),t._v(" "),s("h3",{attrs:{id:"逻辑与数据分离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑与数据分离"}},[t._v("#")]),t._v(" 逻辑与数据分离")]),t._v(" "),s("p",[t._v("如果需要，系统可以帮助将逻辑和行为与数据分离。我们让系统处理繁重的工作，而组件只担心通过生命周期方法管理数据：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("AFRAME.registerSystem（'我的分量'，{ \n  createComplexObject：功能（数据） { //做运算和东西与数据恢复新 ComplexObject（数据）;   } }）;\n    \n     \n\n\n\nAFRAME.registerComponent（'my-component'，{ \n  init：function（） { this .myObject = null ;   }，\n    \n\n\n  更新：功能（} { //用`this.data`做事。这个 .myObject = 这个 .system.createComplexObject（这个 .data）;   } }）;\n    \n")])])]),s("h3",{attrs:{id:"收集系统的所有组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#收集系统的所有组件"}},[t._v("#")]),t._v(" 收集系统的所有组件")]),t._v(" "),s("p",[t._v("没有定义系统如何​​管理组件的严格API。一种常见的模式是让组件订阅系统。然后，系统将引用其所有组件：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("AFRAME.registerSystem（'my-component'，{ \n  init：function（） { this .entities = [];   }，\n    \n\n\n  registerMe：function（el） { this .entities.push（el）;   }，\n    \n\n\n  unregisterMe：function（el） { var index = this .entities.indexOf（el）; 这个 .entities.splice（index，1）;   } }）;\n    \n    \n\n\n\nAFRAME.registerComponent（'my-component'，{ \n  init：function（） { this .system.registerMe（this .el）;   }，\n    \n\n\n  删除：功能（） { this .system.unregisterMe（this .el）;   } }）;\n    \n\n\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);