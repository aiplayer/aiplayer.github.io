(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{391:function(a,e,t){"use strict";t.r(e);var s=t(28),r=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"构建基本场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建基本场景"}},[a._v("#")]),a._v(" 构建基本场景")]),a._v(" "),t("p",[a._v("我们先来构建一个基本的a帧场景。为此，我们需要对HTML有一个基本的了解。我们将学习如何：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("使用基本体添加三维实体（即对象）")])]),a._v(" "),t("li",[t("p",[a._v("通过位置、旋转、缩放转换三维空间中的实体")])]),a._v(" "),t("li",[t("p",[a._v("添加环境")])]),a._v(" "),t("li",[t("p",[a._v("添加纹理")])]),a._v(" "),t("li",[t("p",[a._v("使用动画和事件添加基本交互")])]),a._v(" "),t("li",[t("p",[a._v("添加文本")])])]),a._v(" "),t("h2",{attrs:{id:"从html开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从html开始"}},[a._v("#")]),a._v(" 从HTML开始")]),a._v(" "),t("p",[a._v("我们从一个最小的HTML结构开始：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<html>\n  <head>\n    <script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n  </head>\n  <body>\n    <a-scene>\n    </a-scene>\n  </body>\n</html>\n')])])]),t("p",[a._v("我们将A-Frame作为脚本标记包含在")]),t("head",[a._v("中，指向托管在CDN上的A-Frame构建。这必须在"),t("a-scene",[a._v("之前包含，因为a-Frame注册自定义HTML元素，这些元素必须在附加"),t("a-scene",[a._v("之前定义，否则"),t("a-scene",[a._v("将不起作用。"),t("p"),a._v(" "),t("p",[a._v("接下来，我们将"),t("a-scene",[a._v("包含在"),t("body",[a._v("中。"),t("a-scene",[a._v("将包含场景中的每个实体。"),t("a-scene",[a._v("处理3D所需的所有设置：在HTC Vive、Oculus Rift、Samsung GearVR和智能手机（谷歌硬纸板）等平台上设置WebGL、画布、相机、灯光、渲染器、渲染循环以及开箱即用的WebVR支持。"),t("a-scene",[a._v("一个人就能让我们卸下很多重担！")])],1)],1)],1)])],1),a._v(" "),t("h2",{attrs:{id:"添加实体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加实体"}},[a._v("#")]),a._v(" 添加实体")]),a._v(" "),t("p",[a._v("在"),t("a-scene",[a._v("中，我们使用a-Frame的一个标准基本体"),t("a-box",[a._v("附加3D实体。我们可以像普通的HTML元素一样使用"),t("a-box",[a._v("，定义标记并使用HTML属性对其进行自定义。A-Frame附带的原语的其他一些示例包括"),t("A-collinder",[a._v("、"),t("A-plane",[a._v("或"),t("A-sphere",[a._v("。")])],1)],1)],1)],1)],1)],1),a._v(" "),t("p",[a._v("在这里，我们定义颜色"),t("a-box",[a._v("，更多属性（如宽度、高度、深度）请参见"),t("a-box",[a._v("的文档。")])],1)],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box color="red"></a-box>\n</a-scene>\n\n')])])]),t("p",[a._v("另外，原语是a-Frame易于使用的HTML元素，用于包装底层实体组件程序集。它们可能很方便，但在"),t("a-box",[a._v("下面是"),t("a-entity",[a._v("的几何和材质组件：")])],1)],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-entity id="box" geometry="primitive: box" material="color: red"></a-entity>\n')])])]),t("p",[a._v("但是，由于默认相机和长方体位于原点0 0 0的默认位置，因此除非移动它，否则我们将无法看到长方体。我们可以通过使用位置组件在三维空间中变换长方体来实现这一点。")]),a._v(" "),t("h2",{attrs:{id:"在三维中转换实体"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在三维中转换实体"}},[a._v("#")]),a._v(" 在三维中转换实体")]),a._v(" "),t("p",[a._v("我们先来看看三维空间。A形框架使用右手坐标系。默认相机方向为：正X轴向右延伸，正Y轴向上延伸，正Z轴从屏幕向我们延伸：")]),a._v(" "),t("p",[a._v("A帧的距离单位是米，因为WebVRAPI返回的姿势数据是米。在为虚拟现实设计场景时，考虑我们所创建的实体的真实世界规模是很重要的。在我们的电脑屏幕上，一个高度为10的盒子看起来很正常，但在虚拟现实中，这个盒子会显得很大。")]),a._v(" "),t("p",[a._v("A-Frame在A-Frame中的旋转单位是度，尽管它在传递到three.js时会在内部转换为弧度。要确定正旋转方向，请使用右手法则。拇指指向正轴的方向，以及手指围绕正旋转方向卷曲的方向。")]),a._v(" "),t("p",[a._v("要平移、旋转和缩放长方体，可以更改位置、旋转和缩放组件。首先应用旋转和缩放组件：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box color="red" rotation="0 45 45" scale="2 2 2"></a-box>\n</a-scene>\n')])])]),t("p",[a._v("这将使我们的盒子旋转一个角度，使其大小翻倍。")]),a._v(" "),t("h3",{attrs:{id:"父变换和子变换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#父变换和子变换"}},[a._v("#")]),a._v(" 父变换和子变换")]),a._v(" "),t("p",[a._v("A-Frame HTML表示三维场景图。在场景图中，实体可以有一个父级和多个子级。子实体从其父实体继承变换（即位置、旋转和缩放）。")]),a._v(" "),t("p",[a._v("例如，我们可以将球体作为长方体的子对象：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box position="0 2 0" rotation="0 45 45" scale="2 4 2">\n    <a-sphere position="1 0 3"></a-sphere>\n  </a-box>\n</a-scene>\n')])])]),t("p",[a._v("如果我们计算球体的世界位置，它将是123，通过将球体的父位置与其自身位置组合而实现。类似地，对于旋转和缩放，球体将继承长方体的旋转和缩放。球体也会像其父长方体一样旋转和拉伸。如果长方体要更改其位置、旋转或缩放，它将立即应用于球体并影响球体。")]),a._v(" "),t("p",[a._v("如果我们将圆柱体作为子对象添加到球体中，圆柱体的变换将同时受球体变换和长方体变换的影响。在three.js中，这是通过将转换矩阵相乘来完成的。幸运的是，我们不必考虑这个！")]),a._v(" "),t("h3",{attrs:{id:"把我们的箱子放在摄像机前"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#把我们的箱子放在摄像机前"}},[a._v("#")]),a._v(" 把我们的箱子放在摄像机前")]),a._v(" "),t("p",[a._v("现在让我们从一开始就让相机看到我们的盒子。我们可以用位置组件在负Z轴上向后移动5米。我们还必须在正Y轴上向上移动2米，这样盒子就不会与地面相交，因为我们缩放了盒子，缩放是从中心开始的：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box color="red" position="0 2 -5" rotation="0 45 45" scale="2 2 2"></a-box>\n</a-scene>\n')])])]),t("h3",{attrs:{id:"默认控件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认控件"}},[a._v("#")]),a._v(" 默认控件")]),a._v(" "),t("p",[a._v("对于平面显示器（即笔记本电脑、台式机），默认的控制方案允许我们通过单击并拖动鼠标来四处查看，并使用WASD或箭头键四处移动。在手机上，我们可以转动手机来旋转相机。虽然A-Frame是为WebVR量身定做的，但是这个默认的控制方案允许人们在没有耳机的情况下观看场景。")]),a._v(" "),t("p",[a._v("通过点击连接有虚拟现实耳机的护目镜图标（如Oculus Rift、HTC Vive）进入虚拟现实，我们可以在沉浸式虚拟现实中体验场景。如果房间尺度可用，我们可以在现场走动！")]),a._v(" "),t("h3",{attrs:{id:"添加环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加环境"}},[a._v("#")]),a._v(" 添加环境")]),a._v(" "),t("p",[a._v("A-Frame允许开发人员创建和共享可重用组件，以便其他人轻松使用。@feiss的环境组件通过一行HTML程序为我们生成各种各样的整个环境。环境组件是可视化引导我们的虚拟现实应用程序的一种非常简单的方法，它提供了十几个环境和许多参数：")]),a._v(" "),t("p",[a._v("首先，在a帧后使用脚本标记包括环境组件：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<head>\n  <script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n  <script src="https://unpkg.com/aframe-environment-component/dist/aframe-environment-component.min.js"><\/script>\n</head>\n')])])]),t("p",[a._v("然后在场景中，添加附加了环境组件的实体。我们可以指定一个预设值（例如森林）以及许多其他参数（例如200棵树）：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box color="red" position="0 2 -5" rotation="0 45 45" scale="2 2 2"></a-box>\n\n  \x3c!-- Out of the box environment! --\x3e\n  <a-entity environment="preset: forest; dressingAmount: 500"></a-entity>\n</a-scene>\n')])])]),t("h3",{attrs:{id:"应用图像纹理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用图像纹理"}},[a._v("#")]),a._v(" 应用图像纹理")]),a._v(" "),t("p",[a._v("确保使用本地服务器为HTML提供服务，以便正确加载纹理。")]),a._v(" "),t("p",[a._v("我们可以使用src属性将图像纹理应用到包含图像、视频或"),t("canvas",[a._v("的框中，就像使用normal"),t("img"),a._v("元素一样。我们还应该移除设置的color=“red”，这样颜色就不会与纹理混合。默认材质颜色为白色，因此移除“颜色”属性就足够了。")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box src="https://i.imgur.com/mYmmbrp.jpg" position="0 2 -5" rotation="0 45 45"\n    scale="2 2 2"></a-box>\n\n  <a-sky color="#222"></a-sky>\n</a-scene>\n')])])]),t("p",[a._v("使用资产管理系统")]),a._v(" "),t("p",[a._v("但是，我们建议使用资产管理系统来提高性能。资源管理系统使浏览器更容易缓存资源（如图像、视频、模型），A-Frame将确保在渲染之前获取所有资源。")]),a._v(" "),t("p",[a._v("如果我们在资产管理系统中定义"),t("img"),a._v("，那么后面的3.js不必在内部创建"),t("img"),a._v("。我们自己创建的"),t("img"),a._v("也给了我们更多的控制，让我们可以跨多个实体重用纹理。A-Frame也足够聪明，可以在必要时设置crossOrigin和其他此类属性。")]),a._v(" "),t("p",[a._v("要将资源管理系统用于图像纹理，请执行以下操作：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("将"),t("a-assets",[a._v("添加到场景中。")])],1)]),a._v(" "),t("li",[t("p",[a._v("将纹理定义为"),t("a-assets",[a._v("下的"),t("img"),a._v("。")])],1)]),a._v(" "),t("li",[t("p",[a._v("给"),t("img"),a._v("一个HTML ID（例如ID=“boxTexture”）。")])]),a._v(" "),t("li",[t("p",[a._v("使用DOM选择器格式的ID（src=“35; boxTexture”）引用资源。")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-assets>\n    <img id="boxTexture" src="https://i.imgur.com/mYmmbrp.jpg">\n  </a-assets>\n\n  <a-box src="#boxTexture" position="0 2 -5" rotation="0 45 45" scale="2 2 2"></a-box>\n\n  <a-sky color="#222"></a-sky>\n</a-scene>\n')])])]),t("h2",{attrs:{id:"创建自定义环境（可选）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义环境（可选）"}},[a._v("#")]),a._v(" 创建自定义环境（可选）")]),a._v(" "),t("p",[a._v("以前我们让环境组件生成环境。不过，稍微了解一下如何为学习创造一个基本的环境是很好的。")]),a._v(" "),t("h3",{attrs:{id:"向场景添加背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#向场景添加背景"}},[a._v("#")]),a._v(" 向场景添加背景")]),a._v(" "),t("p",[a._v("我们可以在场景周围添加一个"),t("a-sky",[a._v("背景。"),t("a-sky",[a._v("是应用于大球体内部的材质，可以是平面颜色、360°图像或360°视频。例如，深灰色背景将是：")])],1)],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-box color="red" position="0 2 -5" rotation="0 45 45" scale="2 2 2"></a-box>\n\n  <a-sky color="#222"></a-sky>\n</a-scene>\n')])])]),t("p",[a._v("或者我们可以使用图像纹理，通过使用src而不是颜色来获得360°背景图像：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-assets>\n    <img id="boxTexture" src="https://i.imgur.com/mYmmbrp.jpg">\n    <img id="skyTexture"\n      src="https://cdn.aframe.io/360-image-gallery-boilerplate/img/sechelt.jpg">\n  </a-assets>\n\n  <a-box src="#boxTexture" position="0 2 -5" rotation="0 45 45" scale="2 2 2"></a-box>\n\n  <a-sky src="#skyTexture"></a-sky>\n</a-scene>\n')])])]),t("h3",{attrs:{id:"添加地面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加地面"}},[a._v("#")]),a._v(" 添加地面")]),a._v(" "),t("p",[a._v("要添加地面，可以使用"),t("a-plane",[a._v("。默认情况下，平面的方向与XY轴平行。为了使它与地面平行，我们需要将它沿XZ轴定向。我们可以在X轴上旋转平面负90°。")])],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-plane rotation="-90 0 0"></a-plane>\n')])])]),t("p",[a._v("我们希望地面很大，这样我们可以增加宽度和高度。让我们向每个方向移动30米：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-plane rotation="-90 0 0" width="30" height="30"></a-plane>\n')])])]),t("p",[a._v("然后我们可以将图像纹理应用到我们的地面：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-assets>\n  \x3c!-- ... --\x3e\n  <img id="groundTexture" src="https://cdn.aframe.io/a-painter/images/floor.jpg">\n  \x3c!-- ... --\x3e\n</a-assets>\n\n\x3c!-- ... --\x3e\n<a-plane src="#groundTexture" rotation="-90 0 0" width="30" height="30"></a-plane>\n\x3c!-- ... --\x3e\n')])])]),t("p",[a._v("要平铺纹理，可以使用repeat属性。重复需要两个数字，在X方向重复多少次，在Y方向重复多少次（纹理通常称为U和V）。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-plane src="#groundTexture" rotation="-90 0 0" width="30" height="30"\n  repeat="10 10"></a-plane>\n')])])]),t("h3",{attrs:{id:"调整光源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调整光源"}},[a._v("#")]),a._v(" 调整光源")]),a._v(" "),t("p",[a._v("我们可以使用"),t("a-light",[a._v("s来更改场景的照明方式。默认情况下，如果不指定任何灯光，a-Frame将添加环境光和平行光。如果A-Frame没有为我们添加灯光，场景将是黑色的。但是，一旦我们添加了自己的灯光，默认的灯光设置将被删除并替换为我们的设置。")])],1),a._v(" "),t("p",[a._v("我们将添加一个环境光，有一个轻微的蓝绿色色调，以配合天空。环境光应用于场景中的所有实体（假定它们至少应用了默认材质）。")]),a._v(" "),t("p",[a._v("我们还将添加点光源。点光源就像灯泡；我们可以将它们放置在场景周围，点光源对实体的影响取决于它与实体的距离：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-assets>\n    <img id="boxTexture" src="https://i.imgur.com/mYmmbrp.jpg">\n    <img id="skyTexture"\n      src="https://cdn.aframe.io/360-image-gallery-boilerplate/img/sechelt.jpg">\n    <img id="groundTexture" src="https://cdn.aframe.io/a-painter/images/floor.jpg">\n  </a-assets>\n\n  <a-box src="#boxTexture" position="0 2 -5" rotation="0 45 45" scale="2 2 2"></a-box>\n\n  <a-sky src="#skyTexture"></a-sky>\n\n  <a-light type="ambient" color="#445451"></a-light>\n  <a-light type="point" intensity="2" position="2 4 4"></a-light>\n</a-scene>\n')])])]),t("h3",{attrs:{id:"添加动画"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加动画"}},[a._v("#")]),a._v(" 添加动画")]),a._v(" "),t("p",[a._v("我们可以使用A帧的内置动画系统将动画添加到框中。动画随着时间的推移在一个值之间插值。我们可以在实体上设置动画组件。让盒子上下悬停，为场景添加一些运动。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-assets>\n    <img id="boxTexture" src="https://i.imgur.com/mYmmbrp.jpg">\n  </a-assets>\n\n  <a-box src="#boxTexture" position="0 2 -5" rotation="0 45 45" scale="2 2 2"\n         animation="property: object3D.position.y; to: 2.2; dir: alternate; dur: 2000; loop: true"></a-box>\n</a-scene>\n')])])]),t("p",[a._v("我们告诉动画组件：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("为实体的object3D位置的Y轴设置动画。")])]),a._v(" "),t("li",[t("p",[a._v("动画设置为2.2，高20厘米。")])]),a._v(" "),t("li",[t("p",[a._v("在动画的每个重复周期上交替动画的方向，使其来回移动。")])]),a._v(" "),t("li",[t("p",[a._v("每次循环持续2000毫秒（持续时间）。")])]),a._v(" "),t("li",[t("p",[a._v("循环或永远重复动画。")])])]),a._v(" "),t("h3",{attrs:{id:"添加交互"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加交互"}},[a._v("#")]),a._v(" 添加交互")]),a._v(" "),t("p",[a._v("让我们添加与长方体的交互：当我们查看长方体时，我们将增大长方体的大小，当我们“单击”长方体时，我们将使其旋转。")]),a._v(" "),t("p",[a._v("鉴于许多开发人员目前没有合适的带控制器的虚拟现实硬件，我们将在本节重点介绍如何使用内置光标组件的基本移动和桌面输入。默认情况下，光标组件通过在移动设备上或桌面上盯着实体或盯着它们，看着实体并点击鼠标，提供了“点击”实体的能力。但是要知道光标组件只是添加交互的一种方式，如果我们有权访问实际的控制器，事情就会打开。")]),a._v(" "),t("p",[a._v("要将可见光标固定到摄影机上，我们将光标作为摄影机的子对象放置，如上面在父变换和子变换中所述。")]),a._v(" "),t("p",[a._v("因为我们没有特别定义相机，所以a-Frame包含了一个默认相机。但是由于我们需要添加一个光标作为相机的子对象，我们现在需要定义包含"),t("a-cursor",[a._v("的"),t("a-camera",[a._v("：")])],1)],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-assets>\n    <img id="boxTexture" src="https://i.imgur.com/mYmmbrp.jpg">\n  </a-assets>\n\n  <a-box src="#boxTexture" position="0 2 -5" rotation="0 45 45" scale="2 2 2"\n         animation="property: object3D.position.y; to: 2.2; dir: alternate; dur: 2000; loop: true"></a-box>\n\n  <a-camera>\n    <a-cursor></a-cursor>\n  </a-camera>\n</a-scene>\n')])])]),t("p",[a._v("如果我们检查"),t("a-cursor",[a._v("包装的游标组件的文档，就会发现它发出了鼠标悬停事件，比如mouseenter、mouseleave和click。")])],1),a._v(" "),t("h3",{attrs:{id:"事件侦听器组件（中间）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件侦听器组件（中间）"}},[a._v("#")]),a._v(" 事件侦听器组件（中间）")]),a._v(" "),t("p",[a._v("手动处理游标事件的一种方法是使用JavaScript添加事件监听器，就像使用普通DOM元素一样。如果您不熟悉JavaScript，可以跳到下面的事件动画。")]),a._v(" "),t("p",[a._v("在JavaScript中，我们使用querySelector获取框，使用addEventListener，然后使用setAttribute使框在悬停时增大其比例。请注意，A-Frame将特性添加到setAttribute以使用多特性组件。我们可以传递一个完整的{x，y，z}对象作为第二个参数。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<script>\n  var boxEl = document.querySelector('a-box');\n  boxEl.addEventListener('mouseenter', function () {\n    boxEl.setAttribute('scale', {x: 2, y: 2, z: 2});\n  });\n<\/script>\n")])])]),t("p",[a._v("但是，一个更加健壮的方法是将这个逻辑封装到一个a-Frame组件中。这样，我们就不必等待场景加载，也不必运行查询选择器，因为组件为我们提供了上下文，组件可以重用和配置，而不是在页面上运行不受控制的脚本。更好的方法是跳过calling.setAttribute并直接在this.el.object3D.scale上设置值以提高性能。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("<script>\n  AFRAME.registerComponent('scale-on-mouseenter', {\n    schema: {\n      to: {default: '2.5 2.5 2.5', type: 'vec3'}\n    },\n\n    init: function () {\n      var data = this.data;\n      var el = this.el;\n      this.el.addEventListener('mouseenter', function () {\n        el.object3D.scale.copy(data.to);\n      });\n    }\n  });\n<\/script>\n")])])]),t("p",[a._v("我们可以直接从HTML将此组件附加到我们的框中：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<script>\n  AFRAME.registerComponent(\'scale-on-mouseenter\', {\n    // ...\n  });\n<\/script>\n\n<a-scene>\n  \x3c!-- ... --\x3e\n  <a-box src="#boxTexture" position="0 2 -5" rotation="0 45 45" scale="2 2 2"\n         animation="property: object3D.position.y; to: 2.2; dir: alternate; dur: 2000; loop: true"\n         scale-on-mouseenter></a-box>\n  \x3c!-- ... --\x3e\n</a-scene>\n')])])]),t("h3",{attrs:{id:"在事件上设置动画"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在事件上设置动画"}},[a._v("#")]),a._v(" 在事件上设置动画")]),a._v(" "),t("p",[a._v("动画组件有一个功能，可以在实体发出事件时启动其动画。这可以通过startEvents属性来完成，该属性采用以逗号分隔的事件名称列表。")]),a._v(" "),t("p",[a._v("我们可以为光标组件的mouseenter和mouseleave事件添加两个动画来更改框的比例，并在单击时围绕Y轴旋转框。请注意，一个实体可以有多个动画，方法是在属性名后加上“__"),t("ID",[a._v("”：")])],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-box\n  src="#boxTexture"\n  position="0 2 -5"\n  rotation="0 45 45"\n  scale="2 2 2"\n  animation__position="property: object3D.position.y; to: 2.2; dir: alternate; dur: 2000; loop: true"\n  animation__mouseenter="property: scale; to: 2.3 2.3 2.3; dur: 300; startEvents: mouseenter"\n  animation__mouseleave="property: scale; to: 2 2 2; dur: 300; startEvents: mouseleave">\n</a-box>\n\n')])])]),t("h3",{attrs:{id:"添加音频"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加音频"}},[a._v("#")]),a._v(" 添加音频")]),a._v(" "),t("p",[a._v("音频对于在虚拟现实中提供沉浸感和存在感非常重要。即使在背景中加入简单的白噪声也有很大的帮助。我们建议每个场景都有一些音频。一种方法是将"),t("audio",[a._v("元素添加到HTML（最好在"),t("a-assets",[a._v("下）以播放音频文件：")])],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  <a-assets>\n    <audio src="https://cdn.aframe.io/basic-guide/audio/backgroundnoise.wav" autoplay\n      preload></audio>\n  </a-assets>\n\n  \x3c!-- ... --\x3e\n</a-scene>\n')])])]),t("p",[a._v("或者我们可以使用"),t("a-sound",[a._v("添加位置音频。当我们靠近它时，声音会变得更大，当我们远离它时，声音会变得更柔和。我们可以用位置把声音放在场景中。")])],1),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-scene>\n  \x3c!-- ... --\x3e\n  <a-sound src="https://cdn.aframe.io/basic-guide/audio/backgroundnoise.wav" autoplay="true"\n    position="-3 1 -4"></a-sound>\n  \x3c!-- ... --\x3e\n</a-scene>\n')])])]),t("h3",{attrs:{id:"添加文本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加文本"}},[a._v("#")]),a._v(" 添加文本")]),a._v(" "),t("p",[a._v("A-Frame带有一个文本组件。有几种呈现文本的方法，每种方法都有各自的优缺点。A-Frame附带了一个SDF文本实现，它使用了三个bmfont文本，这些文本相对清晰且性能良好：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<a-entity\n  text="value: Hello, A-Frame!; color: #BBB"\n  position="-0.9 0.2 -3"\n  scale="1.5 1.5 1.5">\n</a-entity>\n')])])])])],1)],1)],1)])}),[],!1,null,null,null);e.default=r.exports}}]);