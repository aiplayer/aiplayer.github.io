(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{285:function(t,e,a){"use strict";a.r(e);var n=a(28),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"第一个脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一个脚本"}},[t._v("#")]),t._v(" 第一个脚本")]),t._v(" "),a("h2",{attrs:{id:"脚本对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚本对象"}},[t._v("#")]),t._v(" 脚本对象")]),t._v(" "),a("p",[t._v("在nunuStudio中，脚本是使用javascript语言编写的，javascript是用于开发网页的语言，它是一种易于学习的语言，本教程不需要任何编程知识。但是我建议您在继续下一个教程之前，先学习javascript编程的基础知识。")]),t._v(" "),a("p",[t._v("脚本对象用于使用javascript代码控制对象，并且其行为方式与其他任何对象相同，它们具有位置，比例和旋转度，可以具有子代并且可以用作容器。")]),t._v(" "),a("p",[t._v("创建脚本对象后，可以通过在对象资源管理器（右侧）中双击脚本对象来打开脚本编辑器。脚本编辑器在新选项卡中打开。新脚本具有一个基本的代码模板，该模板带有用于编写代码的空格。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/nunustudio/firstscript/script.png",alt:"alt text"}})]),t._v(" "),a("p",[t._v("为了使访问程序元素更容易，脚本还可以访问以下属性")]),t._v(" "),a("p",[t._v("-self-用于访问脚本对象的属性（位置，旋转，比例，子级等）。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("程序-用于访问程序实例，可用于更改当前场景，访问资源（getMaterialByName，getTextureByName等）。")])]),t._v(" "),a("li",[a("p",[t._v("scene-用于访问正在运行的场景属性。")])]),t._v(" "),a("li",[a("p",[t._v("键盘-提供对键盘输入的访问")])]),t._v(" "),a("li",[a("p",[t._v("鼠标-提供对鼠标输入的访问")])])]),t._v(" "),a("h2",{attrs:{id:"脚本功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚本功能"}},[t._v("#")]),t._v(" 脚本功能")]),t._v(" "),a("p",[t._v("nunuStudio运行时使用一些保留的函数名称来运行脚本代码。在本教程中，我们将仅使用initialize，update和dispose方法。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("initialize-加载场景时调用initialize方法，通常用于以编程方式创建新对象，从场景中获取对象，初始化变量等。")])]),t._v(" "),a("li",[a("p",[t._v("更新-在将场景绘制到屏幕之前调用每个帧，它可用于控制对象，获取输入值，更改对象属性等。")])]),t._v(" "),a("li",[a("p",[t._v("处置-在程序关闭时调用，应用于清理对象，与数据流断开连接等。")])]),t._v(" "),a("li",[a("p",[t._v("onMouseOver（objects）-当鼠标悬停在属于脚本对象子对象的对象上时调用，可以与Mouse函数结合使用以检查是否单击了对象。接收对象数组作为参数。")])]),t._v(" "),a("li",[a("p",[t._v("onResize（x，y）-每次调整程序窗口大小时调用。")])]),t._v(" "),a("li",[a("p",[t._v("onAppData（data）-用于从主机页面接收数据，数据作为参数接收。")])])]),t._v(" "),a("h2",{attrs:{id:"移动物件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#移动物件"}},[t._v("#")]),t._v(" 移动物件")]),t._v(" "),a("p",[t._v("要移动对象，我们首先将该对象附加为脚本对象的子对象，我们可以通过将所需对象拖动到脚本对象来实现，在本教程中，我们将在默认场景上使用多维数据集对象。让我们从测试以下代码开始")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function initialize()\n{\n\tself.position.x += 2;\n}\n")])])]),a("p",[t._v("程序启动时，此代码将使多维数据集在x轴上移动2个点，但是在对象移动之后，它保持在原位。")]),t._v(" "),a("p",[t._v("要为对象设置动画，我们可以将代码移动到update方法，而不是播放对象位置，而是尝试通过测试以下代码来尝试更改其旋转角度。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function update()\n{\n\tself.rotation.y += 0.01;\n}\n")])])]),a("p",[t._v("如果一切正常，您应该看到以下动画。要在编辑器中尝试此示例，可以下载项目文件或在"),a("RouterLink",{attrs:{to:"/nunustudio/basics.html"}},[t._v("Web编辑器")]),t._v("上将其打开。\n"),a("img",{attrs:{src:"/nunustudio/firstscript/run.png",alt:"alt text"}})],1),t._v(" "),a("h2",{attrs:{id:"键盘和鼠标输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键盘和鼠标输入"}},[t._v("#")]),t._v(" 键盘和鼠标输入")]),t._v(" "),a("p",[t._v("可以使用键盘和鼠标在周围移动对象。可以使用脚本中的Keyboard和Mouse对象来完成此操作。下面的代码使用鼠标增量沿y轴旋转对象，并使用键盘上的箭头键移动对象。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function update()\n{\n\tself.rotation.y += Mouse.delta.x * 0.01;\n\n\tif(Keyboard.keyPressed(Keyboard.LEFT))\n\t{\n\t\tself.position.x -= 0.1;\n\t}\n\tif(Keyboard.keyPressed(Keyboard.RIGHT))\n\t{\n\t\tself.position.x += 0.1;\n\t}\n}\n")])])]),a("p",[t._v("如果一切正常，您应该能够使用键盘上的箭头键移动多维数据集，并使用鼠标如下图所示旋转它。要在编辑器中尝试此示例，可以下载项目文件或在Web编辑器上将其打开。\n"),a("img",{attrs:{src:"/nunustudio/firstscript/run2.png",alt:"alt text"}})]),t._v(" "),a("h2",{attrs:{id:"获取对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取对象"}},[t._v("#")]),t._v(" 获取对象")]),t._v(" "),a("p",[t._v("可以使用脚本访问其他对象和资源，在下面的示例中，如果找到多个具有相同名称的对象，则我们使用scene.getObjectByName（）方法通过其名称获取对象（在本例中为名称为box的对象）第一个返回。")]),t._v(" "),a("p",[t._v("资源存储在程序中，类似地，可以使用方法program.getMaterialByName（），program.getTextureByName（）等来获取它们（有关更多信息，请参见ResourceManager API文档页面）。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('var object;\n\nfunction initialize()\n{\n\tobject = scene.getObjectByName("box");\n}\n\nfunction update()\n{\n\tobject.rotation.y += 0.01;\n}\n')])])]),a("p",[t._v("通过导航树结构来访问对象的另一种方法，每个对象都有一个父对象和子对象，父对象指向上方的对象，而子对象是所有对象的数组。")]),t._v(" "),a("p",[t._v("在下面的代码中，我们将第一个对象放置在脚本内，并使其旋转而不旋转脚本本身。直接访问子对象或父对象时要小心，因为这取决于项目中对象的位置，更改可能会破坏代码。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var object;\n\nfunction initialize()\n{\n\tobject = self.children[0];\n}\n\nfunction update()\n{\n\tobject.rotation.y += 0.01;\n}\n")])])]),a("h2",{attrs:{id:"切换场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切换场景"}},[t._v("#")]),t._v(" 切换场景")]),t._v(" "),a("p",[t._v("可以在编辑器中创建多个场景并使用脚本在它们之间切换。可以从所有脚本均可访问的程序变量访问场景。setScene（）方法丢弃当前场景并加载一个新场景，它接收场景名称或场景对象（存储在program.scenes数组中）作为参数")]),t._v(" "),a("p",[t._v("在键盘上按W键之后，可以使用下面的代码切换到“ scene2”。为了返回到原始场景，scene2必须实现类似的逻辑，没有自动场景导航流程。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('function update(delta)\n{\n\tif(Keyboard.keyPressed(Keyboard.W))\n\t{\n\t\tprogram.setScene("scene2");\n\t}\n}\n')])])]),a("h2",{attrs:{id:"对象属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象属性"}},[t._v("#")]),t._v(" 对象属性")]),t._v(" "),a("p",[t._v("脚本对象中的self指针可用于存储其他脚本可以访问的附加属性。属性也可以小心地存储到对象中，以避免与nunuStudio API提供的属性冲突。")]),t._v(" "),a("p",[t._v("在下面的示例中，我们创建一个附加到脚本对象的计数器变量和一个可以由其他脚本访问和调用的gainCounter函数。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("self.counter = 0;\n\nself.increaseCounter = function()\n{\n\tself.counter++;\n}\n")])])]),a("h2",{attrs:{id:"dom元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom元素"}},[t._v("#")]),t._v(" DOM元素")]),t._v(" "),a("p",[t._v("可以将dom元素附加到创建的程序。为此，我们可以使用程序的division属性，该属性使我们可以访问DOM元素（用于绘制内容的画布元素的父元素），可以在其中添加HTML元素。")]),t._v(" "),a("p",[t._v("下面的示例演示如何创建大小为50 x 50的新红色分区，将其添加到程序中，并在关闭程序时将其删除。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('var element = document.createElement("div");\nelement.style.width = "100px";\nelement.style.height = "100px";\nelement.style.position = "absolute";\nelement.style.top = "0px";\nelement.style.backgroundColor = "#FF0000";\n\nfunction initialize()\n{\n\tprogram.division.appendChild(element);\n}\n\nfunction dispose()\n{\n\tprogram.division.removeChild(element);\n}\n')])])]),a("h2",{attrs:{id:"外部库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部库"}},[t._v("#")]),t._v(" 外部库")]),t._v(" "),a("p",[t._v("要将外部库添加到脚本中，首先需要将js文件导入到项目中，您只需将JS源文件拖到资产资源管理器中，或转到Import / Text并选择js文件。\n"),a("img",{attrs:{src:"/nunustudio/firstscript/include.jpg",alt:"alt text"}}),t._v("\n将文件导入项目后，现在可以使用代码顶部的include（name）方法将其包含在脚本中。默认情况下，脚本对象使用多种包含模式。评估模式在脚本上下文中评估和执行库，附加模式将库代码附加在脚本代码之上，这会使编译速度变慢，但本地定义代码可用于您的脚本。可以在“脚本”对象面板中选择脚本模式。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('include("moment.min.js"); //https://momentjs.com/\n\nvar date, hour;\n\nfunction initialize()\n{\n\tdate = program.getObjectByName("date");\n\tdate.setText(moment().format("MMM Do YY"));\n\t\n\thour = program.getObjectByName("hour");\n}\n\nfunction update()\n{\n\tvar text = moment().format(\'LTS\');\n\tif(text !== hour.text)\n\t{\t\n\t\thour.setText(text);\n\t}\n}\n\nfunction dispose()\n{\n\tdelete moment;\n}\n')])])]),a("p",[t._v("上面的代码演示了如何使用momentjs在文本对象上显示日期和时间。该库可从https://momentjs.com/\n免费获得。要在编辑器中尝试此示例，可以下载项目文件或在Web编辑器上将其打开。\n"),a("img",{attrs:{src:"/nunustudio/firstscript/run3.png",alt:"alt text"}})])])}),[],!1,null,null,null);e.default=s.exports}}]);