(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{320:function(e,t,a){"use strict";a.r(t);var n=a(28),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"交互与控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交互与控制"}},[e._v("#")]),e._v(" 交互与控制")]),e._v(" "),a("p",[e._v("由于A-Frame可以支持多种平台、设备和输入方法，因此没有一种真正的方法来添加交互。除此之外，虚拟现实交互是开放式的。不同于二维网络，我们只需要担心鼠标和触摸输入，也不同于硬纸板，我们只需要担心一个按钮，我们可以做任何事情在虚拟现实：抓取，投掷，摩擦，翻转，戳，拉伸，按等更进一步，混合现实，追踪器和自定义控制器提供了更多的创造力在互动！")]),e._v(" "),a("p",[e._v("在这一节中，我们可以做的是检查现有组件以实现通用交互。我们可以展示这些基于输入和基于交互的组件是如何构建的，以便为我们提供构建自己交互的知识。从某种意义上说，学会钓鱼，而不是给鱼吃。")]),e._v(" "),a("h2",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),a("p",[e._v("在2dweb中，输入和交互是通过浏览器事件（例如，click、mouseenter、mouseleave、touchstart、touchend）处理的。每当发生基于输入的事件时，浏览器将发出一个事件，我们可以侦听该事件并使用Element.addEventListener进行处理：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// `click` event emitted by browser on mouse click.\ndocument.querySelector('p').addEventListener('click', function (evt) {\n  console.log('This 2D element was clicked!');\n});\n\n")])])]),a("p",[e._v("与2dweb一样，A-Frame依赖于事件和事件侦听器来实现交互性和动态性。但是，由于A-Frame是一个JavaScript框架，所有工作都在WebGL中完成，因此A-Frame的事件是合成的自定义事件，可以由描述任何事件的任何组件发出：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("// `collide` event emitted by a component such as some collider or physics component.\ndocument.querySelector('a-entity').addEventListener('collide', function (evt) {\n  console.log('This A-Frame entity collided with another entity!');\n});\n\n")])])]),a("p",[e._v("一个常见的错误想法是，我们可以将单击事件侦听器添加到A-Frame实体，并期望它通过用鼠标直接单击该实体来工作。在WebGL中，我们必须提供提供这种点击事件的输入和交互。例如，A帧的光标组件使用光线投射器在凝视时创建合成单击事件。或者作为另一个例子，Mayo Tobita的鼠标光标组件在使用raycaster直接单击实体时创建一个合成的单击事件。")]),e._v(" "),a("h2",{attrs:{id:"基于凝视的光标组件交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于凝视的光标组件交互"}},[e._v("#")]),e._v(" 基于凝视的光标组件交互")]),e._v(" "),a("p",[e._v("我们将首先讨论基于凝视的交互。基于凝视的互动依赖于转动我们的头和观察物体来与它们互动。这种交互方式适用于没有控制器的耳机。即使使用了只旋转的控制器（白日梦、GearVR、Oculus Go），交互仍然是相似的。由于A-Frame默认提供鼠标拖动控件，因此可以在桌面上通过拖动相机旋转来预览交互。")]),e._v(" "),a("p",[e._v("要添加基于凝视的交互，我们需要添加或实现一个组件。A-Frame附带了一个光标组件，如果连接到相机，它可以提供基于凝视的交互：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("明确定义"),a("a-camera",[e._v("实体。以前，A-Frame提供默认相机。")])],1)]),e._v(" "),a("li",[a("p",[e._v("将"),a("a-cursor",[e._v("实体添加为摄影机实体下的子元素。")])],1)]),e._v(" "),a("li",[a("p",[e._v("（可选）配置光标使用的光线投射器。")])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<a-scene>\n  <a-camera>\n    <a-cursor></a-cursor>\n    \x3c!-- Or <a-entity cursor></a-entity> --\x3e\n  </a-camera>\n</a-scene>\n\n")])])]),a("h3",{attrs:{id:"使用事件集组件处理事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用事件集组件处理事件"}},[e._v("#")]),e._v(" 使用事件集组件处理事件")]),e._v(" "),a("p",[e._v("现在让我们处理游标组件提供的事件。光标组件发出合成事件，如单击、鼠标指针、鼠标移动、鼠标向下、鼠标调整和融合。我们将它们命名为类似于浏览器的本地事件，以供新用户熟悉，但请再次注意，它们是合成事件。")]),e._v(" "),a("p",[e._v("对于侦听事件并设置响应属性的基本事件处理程序，可以使用事件集组件。事件集组件使基本事件处理程序具有声明性。事件集组件的API如下所示：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity event-set__${id}="_event: ${eventName}; ${someProperty}: ${toValue}">\n\n\n')])])]),a("p",[e._v("通过__${id}块，我们可以在同一个实体上附加多个事件集组件。我们提供${eventName}实例将处理哪个事件。然后我们传递属性名和值，当事件发生在实体上或从实体中发生时，我们要设置这些属性名和值。")]),e._v(" "),a("p",[e._v("例如，使实体在悬停或查看时可见。游标组件提供mouseenter事件：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity event-set__makevisible="_event: mouseenter; visible: true">\n\n')])])]),a("p",[e._v("如果要在悬停时更改框的颜色并在不再悬停时还原它：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n<script src="https://unpkg.com/aframe-event-set-component@3.0.3/dist/aframe-event-set-component.min.js"><\/script>\n<body>\n  <a-scene>\n    <a-box position="-1 0.5 -3" rotation="0 45 0" color="#4CC3D9"\n           event-set__enter="_event: mouseenter; color: #8FF7FF"\n           event-set__leave="_event: mouseleave; color: #4CC3D9"></a-box>\n\n    <a-camera>\n      <a-cursor></a-cursor>\n    </a-camera>\n  </a-scene>\n</body>\n\n')])])]),a("p",[e._v("事件集组件还可以使用{target:${selector}以其他实体为目标。如果要在实体悬停在上面时显示文本标签：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n<script src="https://unpkg.com/aframe-event-set-component@3.0.3/dist/aframe-event-set-component.min.js"><\/script>\n<body>\n  <a-scene>\n    <a-cylinder position="1 0.75 -3" radius="0.5" height="1.5" color="#FFC65D"\n                event-set__enter="_event: mouseenter; _target: #cylinderText; visible: true"\n                event-set__leave="_event: mouseleave; _target: #cylinderText; visible: false">\n      <a-text id="cylinderText" value="This is a cylinder" align="center" color="#FFF" visible="false" position="0 -0.55 0.55"\n              geometry="primitive: plane; width: 1.75" material="color: #333"></a-text>\n    </a-cylinder>\n\n    <a-camera>\n      <a-cursor></a-cursor>\n    </a-camera>\n  </a-scene>\n</body>\n\n')])])]),a("p",[e._v("事件集组件还可以使用A-Frame组件点语法（即${componentName}.${propertyName}）处理具有多个属性的组件：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<script src="https://aframe.io/releases/1.0.4/aframe.min.js"><\/script>\n<script src="https://unpkg.com/aframe-event-set-component@3.0.3/dist/aframe-event-set-component.min.js"><\/script>\n<body>\n  <a-scene>\n    <a-plane position="0 0 -4" rotation="-90 0 0" width="4" height="4" color="#7BC8A4"\n             event-set__down="_event: mousedown; material.wireframe: true"\n             event-set__up="_event: mouseup; material.wireframe: false"\n             event-set__leave="_event: mouseleave; material.wireframe: false"></a-plane>\n\n    <a-camera>\n      <a-cursor></a-cursor>\n    </a-camera>\n  </a-scene>\n</body>\n\n')])])]),a("h3",{attrs:{id:"使用javascript处理事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用javascript处理事件"}},[e._v("#")]),e._v(" 使用Javascript处理事件")]),e._v(" "),a("p",[e._v("事件集组件适合于基本的设置操作，但是了解如何在JavaScript中处理事件很重要。我们可能希望对事件执行更复杂的操作（例如，进行API调用、存储数据、影响应用程序状态）。对于这些情况，我们需要使用JavaScript，对于A-Frame，我们规定代码放在A-Frame组件中。")]),e._v(" "),a("p",[e._v("为了演示事件集组件在引擎盖下的功能，让我们在悬停和使用JavaScript离开悬停时使用一个改变颜色的框：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<script src=\"https://aframe.io/releases/1.0.4/aframe.min.js\"><\/script>\n<script>\n  AFRAME.registerComponent('change-color-on-hover', {\n    schema: {\n      color: {default: 'red'}\n    },\n\n    init: function () {\n      var data = this.data;\n      var el = this.el;  // <a-box>\n      var defaultColor = el.getAttribute('material').color;\n\n      el.addEventListener('mouseenter', function () {\n        el.setAttribute('color', data.color);\n      });\n\n      el.addEventListener('mouseleave', function () {\n        el.setAttribute('color', defaultColor);\n      });\n    }\n  });\n<\/script>\n<body>\n  <a-scene>\n    <a-box color=\"#EF2D5E\" position=\"0 1 -4\" change-color-on-hover=\"color: blue\"></a-box>\n\n    <a-camera><a-cursor></a-cursor></a-camera>\n  </a-scene>\n</body>\n\n")])])]),a("p",[e._v("虽然我们做了一个简单的.setAttribute，但是技术上我们可以在组件中做任何事情来响应事件，因为我们可以完全访问JavaScript、3.js和webapi。")]),e._v(" "),a("p",[e._v("我们将继续描述和实现虚拟现实控制器的交互性，但事件和事件侦听器的概念仍然适用。")]),e._v(" "),a("h2",{attrs:{id:"虚拟现实控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟现实控制器"}},[e._v("#")]),e._v(" 虚拟现实控制器")]),e._v(" "),a("p",[e._v("控制器对于让人们沉浸在虚拟现实应用程序中至关重要。没有它们，即提供6个自由度（6自由度）的控制器，虚拟现实的潜力就无法得到满足。有了控制器，人们可以伸出手来和周围的场景互动。")]),e._v(" "),a("p",[e._v("A-Frame通过Gamepad Web API为其各自的WebVR浏览器支持的整个频谱的控制器提供组件。Vive、Oculus Touch、Daydream、GearVR和Oculus Go控制器都有组件。")]),e._v(" "),a("p",[e._v("要检查Gamepad对象是否四处移动或获取Gamepad ID，可以在浏览器控制台中调用navigator.getGamepads（）。这将返回一个带有所有连接控制器的GamepadList数组。")]),e._v(" "),a("p",[e._v("对于高级应用程序，控制器是为应用程序（即自定义三维模型、动画、映射、手势）而构建和定制的。例如，中世纪的骑士可能有金属手套，或者机器人可能有一只可以发射激光或在手腕上显示信息的机器人手。")]),e._v(" "),a("p",[e._v("A-Frame提供的控制器组件主要用作默认组件、启动程序组件或派生更多自定义控制器组件的基础。")]),e._v(" "),a("h3",{attrs:{id:"跟踪控制组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跟踪控制组件"}},[e._v("#")]),e._v(" 跟踪控制组件")]),e._v(" "),a("p",[e._v("跟踪控制组件是A帧的基础控制器组件，它为所有A帧控制器组件提供基础。跟踪控制组件：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("从给定ID或前缀的Gamepad API中获取Gamepad对象。")])]),e._v(" "),a("li",[a("p",[e._v("从Gamepad API应用姿势（位置和方向）来读取控制器运动。")])]),e._v(" "),a("li",[a("p",[e._v("查找Gamepad对象的按钮值中的更改，以在按下或触摸按钮以及更改轴和触摸板（即，axis changed、buttonchanged、buttondown、buttonup、touchstart、touchend）时提供事件。")])])]),e._v(" "),a("p",[e._v("所有A-Frame的控制器组件都通过以下方式构建在跟踪控制组件之上：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("在具有适当游戏板ID的实体上设置跟踪控件组件（例如，Oculus Touch（右））。例如，vive控件组件执行el.setAttribute（'tracked-controls'，{idPrefix:'OpenVR'}）。跟踪的控件将连接到适当的Gamepad对象，为实体提供姿势和事件。")])]),e._v(" "),a("li",[a("p",[e._v("抽象被跟踪控件提供的事件。跟踪控件事件是低级的；我们很难仅根据这些事件来判断哪些按钮被按下，因为我们必须事先知道按钮映射。控制器组件可以预先知道各自控制器的映射，并提供更多的语义事件，如triggerdown或xbuttonup。")])]),e._v(" "),a("li",[a("p",[e._v("提供一个模型。仅跟踪控件不提供任何外观。控制器组件可以提供一个模型，在按下或触摸按钮时显示视觉反馈、手势和动画。")])])]),e._v(" "),a("p",[e._v("以下控制器组件只有在检测到在Gamepad API中找到并被视为已连接的控制器时才会激活。")]),e._v(" "),a("h3",{attrs:{id:"添加3dof控制器（白日梦控件、gearvr控件、oculus-go控件）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加3dof控制器（白日梦控件、gearvr控件、oculus-go控件）"}},[e._v("#")]),e._v(" 添加3DoF控制器（白日梦控件、gearvr控件、oculus go控件）")]),e._v(" "),a("p",[e._v("具有3个自由度（3DoF）的控制器仅限于旋转跟踪。3DoF控制器没有位置跟踪，这意味着我们不能伸出手来，也不能来回或上下移动我们的手。只有3DoF的控制器就像没有手臂的手和手腕一样。阅读更多有关虚拟现实自由度的信息。")]),e._v(" "),a("p",[e._v("3DoF控制器组件提供旋转跟踪、与实际硬件匹配的默认模型以及用于抽象按钮映射的事件。谷歌白日梦、三星GearVR和Oculus Go的控制器都有3DoF，而且都只支持一只手一个控制器。")]),e._v(" "),a("p",[e._v("要为Google白日梦添加控制器，请使用白日梦控件组件。然后在“白日梦”智能手机上的Android版Chrome上试用：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<a-entity daydream-controls></a-entity>\n\n")])])]),a("p",[e._v("要为Samsung GearVR添加控制器，请使用GearVR控件组件。然后在Oculus Carmel或三星互联网上使用GearVR智能手机进行测试：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<a-entity gearvr-controls></a-entity>\n\n")])])]),a("p",[e._v("要为Oculus Go添加控制器，请使用Oculus Go控件组件。然后在Oculus浏览器或三星互联网上的Oculus Go独立耳机上试用：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<a-entity oculus-go-controls></a-entity>\n\n")])])]),a("h3",{attrs:{id:"添加6自由度控制器（vive控件、oculus触摸控件）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加6自由度控制器（vive控件、oculus触摸控件）"}},[e._v("#")]),e._v(" 添加6自由度控制器（vive控件、oculus触摸控件）")]),e._v(" "),a("p",[e._v("具有6个自由度（6个自由度）的控制器同时具有旋转和位置跟踪。不同于3DoF受方向约束的控制器，6DoF的控制器能够在三维空间中自由移动。6自由度允许我们向前，在背后，移动我们的手在我们的身体或接近我们的脸。拥有6自由度就像我们拥有双手和手臂的现实。6DoF也适用于耳机和其他跟踪器（如脚、道具）。拥有6自由度是提供真正沉浸式虚拟现实体验的最低要求。")]),e._v(" "),a("p",[e._v("6自由度控制器组件提供完整的跟踪、与实际硬件匹配的默认模型，以及用于提取按钮映射的事件。HTC Vive和Oculus Rift提供6自由度和双手控制器。HTC Vive还提供追踪器，用于将真实世界中的其他对象跟踪到虚拟现实中。")]),e._v(" "),a("p",[e._v("要为HTC Vive添加控制器，请对双手使用Vive控件组件。然后在支持WebVR的桌面浏览器上试用：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity vive-controls="hand: left"></a-entity>\n<a-entity vive-controls="hand: right"></a-entity>\n\n')])])]),a("p",[e._v("要为Oculus Touch添加控制器，请对双手使用Oculus Touch controls组件。然后在支持WebVR的桌面浏览器上试用：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity oculus-touch-controls="hand: left"></a-entity>\n<a-entity oculus-touch-controls="hand: right"></a-entity>\n\n')])])]),a("h2",{attrs:{id:"支持多种控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持多种控制器"}},[e._v("#")]),e._v(" 支持多种控制器")]),e._v(" "),a("p",[e._v("Web的好处是能够支持多个平台。虽然在虚拟现实中支持多个平台需要什么还不太清楚，因为3自由度平台和6自由度平台提供了不同的交互，需要不同的用户体验处理。这将取决于应用程序的“响应”意味着虚拟现实在网上。我们能展示的是几种不同的方法，但没有一种是真正的一刀切。")]),e._v(" "),a("h3",{attrs:{id:"手动控制组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手动控制组件"}},[e._v("#")]),e._v(" 手动控制组件")]),e._v(" "),a("p",[e._v("A-Frame提供了一种通过手控组件支持多种类型的6自由度控制器（Vive、Oculus Touch）的实现。“手控”组件主要用于6自由度控制器，因为它面向房间范围的交互，例如抓取对象。“手控”组件通过以下方式在Vive和Oculus触摸控制器上工作：")]),e._v(" "),a("p",[e._v("设置vive控件和oculus touch控件组件")]),e._v(" "),a("p",[e._v("用简单的手模型覆盖控制器模型")]),e._v(" "),a("p",[e._v("将Vive-specific和Oculus-Touch-specific事件映射到手势和手势（例如，gripdown和triggerdown到thumb-up）")]),e._v(" "),a("p",[e._v("要添加手动控制组件，请执行以下操作：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity hand-controls="left"></a-entity>\n<a-entity hand-controls="right"></a-entity>\n\n')])])]),a("p",[e._v("不幸的是，目前还没有一个3DoF控制器组件能够很好地抽象出所有类型的3DoF控制器（即白日梦、GearVR）。我们可以创建一个与两个控制器一起工作的自定义控制器。这将是相当容易涵盖，因为3DoF控制器不提供太多的互动潜力（即，只有旋转跟踪与触摸板）。")]),e._v(" "),a("p",[e._v("但是，有一个控制器组件，它覆盖了当前由a-Frame支持的所有6自由度和3自由度控制器：激光控制。")]),e._v(" "),a("h3",{attrs:{id:"创建自定义控制器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义控制器"}},[e._v("#")]),e._v(" 创建自定义控制器")]),e._v(" "),a("p",[e._v("如前所述，当控制器根据体验定制时，应用程序是最好的。大多数虚拟现实应用程序都有自己独特的控制器。这意味着不同的模型、动画、手势、视觉反馈和状态。")]),e._v(" "),a("p",[e._v("查看手动控件源代码是了解如何在不必从头开始的情况下执行所有操作的情况下执行自定义控制器的一种不错的方法：")]),e._v(" "),a("p",[e._v("跟踪控制组件将提供姿势和事件")]),e._v(" "),a("p",[e._v("vive控件、oculus触摸控件、白日梦控件或gearvr控件组件提供按钮映射控制器特定事件")]),e._v(" "),a("p",[e._v("我们的自定义控制器组件将建立在以上所有内容的基础上，并覆盖模型、动画、视觉反馈、状态等。，")]),e._v(" "),a("p",[e._v("第一部分是设置支持哪些控制器组件。控制器组件也将注入跟踪控制组件。例如，要支持所有控制器，请在提供手和覆盖模型的同时设置所有控制器组件：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("AFRAME.registerComponent('custom-controls', {\n  schema: {\n    hand: {default: ''},\n    model: {default: 'customControllerModel.gltf'}\n  },\n\n  update: function () {\n    var hand = this.data.hand;\n    var el = this.el;\n    var controlConfiguration = {\n      hand: hand,\n      model: false,\n      orientationOffset: {x: 0, y: 0, z: hand === 'left' ? 90 : -90}\n    };\n\n    // Build on top of controller components.\n    el.setAttribute('vive-controls', controlConfiguration);\n    el.setAttribute('oculus-touch-controls', controlConfiguration);\n    el.setAttribute('daydream-controls', controlConfiguration);\n    el.setAttribute('gearvr-controls', controlConfiguration);\n    el.setAttribute('windows-motion-controls', controlConfiguration);\n\n    // Set a model.\n    el.setAttribute('gltf-model', this.data.model);\n  }\n});\n\n")])])]),a("p",[e._v("有关实际应用程序的高级示例，请参见A-Painter的“绘制控件”组件或A-Blast的“拍摄控件”组件。")]),e._v(" "),a("h2",{attrs:{id:"监听按钮和轴事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监听按钮和轴事件"}},[e._v("#")]),e._v(" 监听按钮和轴事件")]),e._v(" "),a("p",[e._v("控制器有许多按钮并发出许多事件。对于每个按钮，每次按下、松开或在某些情况下，甚至触摸按钮。对于每个轴（例如，轨迹板、拇指棒），每次触摸都会发出一个事件。要处理按钮，请在事件表中相应的控制器组件文档页面中查找事件名称，然后按照我们的要求注册事件处理程序：")]),e._v(" "),a("ul",[a("li",[e._v("daydream-controls events")]),e._v(" "),a("li",[e._v("gearvr-controls events")]),e._v(" "),a("li",[e._v("hand-controls events")]),e._v(" "),a("li",[e._v("oculus-touch-controls events")]),e._v(" "),a("li",[e._v("vive-controls events")]),e._v(" "),a("li",[e._v("windows-motion-controls events")])]),e._v(" "),a("p",[e._v("例如，我们可以监听Oculus Touch X按钮的按下，并切换实体的可见性。组件形式：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("AFRAME.registerComponent('x-button-listener', {\n  init: function () {\n    var el = this.el;\n    el.addEventListener('xbuttondown', function (evt) {\n      el.setAttribute('visible', !el.getAttribute('visible'));\n    });\n  }\n});\n\n")])])]),a("h2",{attrs:{id:"为控制器添加激光交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为控制器添加激光交互"}},[e._v("#")]),e._v(" 为控制器添加激光交互")]),e._v(" "),a("p",[e._v("激光相互作用是指将可见的光线投射器（线）射出控制器。当实体与直线相交、控制器按钮在相交期间更改和/或当实体不再与直线相交时，将发生交互。这种交互与基于凝视的交互非常相似，只是raycaster现在贴在控制器上，而不是耳机上。")]),e._v(" "),a("p",[e._v("激光控制组件组件为控制器提供激光交互。其用法与光标组件几乎完全相似，但将组件附加到控制器而不是相机下：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity laser-controls="hand: right"></a-entity>\n\n')])])]),a("p",[e._v("然后通过调整光线投射器的长度来配置激光器的默认长度。当激光与实体相交时，激光的长度将被截断。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<a-entity hand-controls laser-controls raycaster="far: 2"></a-entity>\n\n')])])]),a("p",[e._v("然后，处理事件和交互与光标组件的基于凝视的交互完全相同。请参阅以上章节！")]),e._v(" "),a("h2",{attrs:{id:"为控制器添加房间比例交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为控制器添加房间比例交互"}},[e._v("#")]),e._v(" 为控制器添加房间比例交互")]),e._v(" "),a("p",[e._v("房间尺度的交互比较困难。这些包括三维空间中的交互和双手交互，如抓、扔、伸、打、转、拉或推。房间级交互的数量或复杂性不是我们可以完全覆盖的。这与二维网络不同，二维网络只有鼠标和触摸屏，三维虚拟现实只有控制器的晃动。但是我们可以展示各种可以作为原样使用或作为参考的实现。")]),e._v(" "),a("p",[e._v("与使用光线投射器检测与对象的交集不同，房间比例和三维交互涉及碰撞器。光线投射器是二维线，而碰撞器是三维体。有不同形状的碰撞器（AABB/框、球体、网格）环绕对象，当这些形状相交时，会检测到碰撞。")]),e._v(" "),a("h3",{attrs:{id:"超级手组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超级手组件"}},[e._v("#")]),e._v(" 超级手组件")]),e._v(" "),a("p",[e._v("William Murphy的super-hands组件提供了一个一体化的自然手控制器交互。该组件将来自跟踪控制器和碰撞检测组件的输入解释为交互手势，并将这些手势传递给目标实体，以便它们做出响应。")]),e._v(" "),a("p",[e._v("目前实施的手势有：")]),e._v(" "),a("p",[e._v("悬停：在实体的碰撞空间中保持控制器")]),e._v(" "),a("p",[e._v("抓取：在悬停实体时按下按钮，也可能移动它")]),e._v(" "),a("p",[e._v("拉伸：用双手抓取实体并调整大小")]),e._v(" "),a("p",[e._v("拖放：将实体拖到另一个实体上")]),e._v(" "),a("p",[e._v("为了让实体对超级手势做出响应，实体需要附加组件来将手势转换为动作。超级手包括对实现的手势做出典型反应的组件：可悬停、可抓取、可拉伸和可拖放。")]),e._v(" "),a("p",[e._v("超级手和例子的文档对于入门来说是非常好的。我们遵从这些。")]),e._v(" "),a("p",[e._v("其他例子")]),e._v(" "),a("p",[e._v("其他示例包括：")]),e._v(" "),a("ul",[a("li",[e._v("tracked-controls - Interaction through sphere-collider and grab components.")]),e._v(" "),a("li",[e._v("ball-throw - Grab and throw using aframe-extras and aframe-physics.")]),e._v(" "),a("li",[e._v("vr-editor - Interaction through a single vr-editor component for cloning, moving, deleting, placing, and scaling.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);