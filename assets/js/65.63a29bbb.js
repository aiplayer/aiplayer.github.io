(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{374:function(t,v,_){"use strict";_.r(v);var a=_(28),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"跟踪组件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#跟踪组件"}},[t._v("#")]),t._v(" 跟踪组件")]),t._v(" "),_("p",[t._v("跟踪控件组件与跟踪控制器接口。tracked-controls使用Gamepad API处理被跟踪的控制器，并且由hand-controls组件以及 vive-controls，oculus-touch-controls， windows-motion-controls和daydream-controls 组件抽象。该组件选择适当的控制器，对实体施加姿势，观察按钮状态并发出适当的事件。对于非6DOF控制器（例如Daydream-controls），将使用原始手臂模型来模拟位置数据。")]),t._v(" "),_("p",[t._v("tracked-controls设置了两个组件，分别处理用于VR的不同Web API版本：")]),t._v(" "),_("ul",[_("li",[t._v("跟踪控件的webvr")]),t._v(" "),_("li",[t._v("tracked-controls-webxr")])]),t._v(" "),_("h2",{attrs:{id:"例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[t._v("#")]),t._v(" 例")]),t._v(" "),_("p",[t._v("请注意，由于最近特定于浏览器的更改，Gamepad API可能会返回ID为“ OpenVR Gamepad”或“ OpenVR Controller”的Vive控制器，因此建议对vive / OpenVR控制器使用idPrefix。")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v('<a-entity tracked-controls="controller: 0; idPrefix: OpenVR"></a-entity>\n')])])]),_("h2",{attrs:{id:"值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#值"}},[t._v("#")]),t._v(" 值")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("描述")]),t._v(" "),_("th",[t._v("默认值")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("armModel")]),t._v(" "),_("td",[t._v("如果不存在，则是否将手臂模型用于位置数据。")]),t._v(" "),_("td",[t._v("真正")])]),t._v(" "),_("tr",[_("td",[t._v("自动隐藏")]),t._v(" "),_("td",[t._v("连接或断开控制器时是否自动切换可见性。")]),t._v(" "),_("td",[t._v("真正")])]),t._v(" "),_("tr",[_("td",[t._v("控制者")]),t._v(" "),_("td",[t._v("Gamepad API返回的数组中控制器的索引。")]),t._v(" "),_("td",[t._v("0")])]),t._v(" "),_("tr",[_("td",[t._v("ID")]),t._v(" "),_("td",[t._v("使用完全匹配从Gamepad API中选择控制器。")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("idPrefix")]),t._v(" "),_("td",[t._v("使用前缀匹配从Gamepad API中选择控制器。")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("headElement")]),t._v(" "),_("td",[t._v("手臂模型的头部元素（如果需要）（如果未激活相机）。")]),t._v(" "),_("td")]),t._v(" "),_("tr",[_("td",[t._v("手")]),t._v(" "),_("td",[t._v("如果需要手臂模型，则使用哪只手。（左取X）")]),t._v(" "),_("td",[t._v("对")])]),t._v(" "),_("tr",[_("td",[t._v("orientationOffset")]),t._v(" "),_("td",[t._v("偏移量应用于模型方向。")]),t._v(" "),_("td",[t._v("x：0，y：0，z：0")])])])]),t._v(" "),_("h2",{attrs:{id:"事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("活动名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("控制器已连接")]),t._v(" "),_("td",[t._v("控制器已连接并建立。")])]),t._v(" "),_("tr",[_("td",[t._v("控制器断开")]),t._v(" "),_("td",[t._v("控制器已断开连接。")])]),t._v(" "),_("tr",[_("td",[t._v("轴移动")]),t._v(" "),_("td",[t._v("轴已更改（例如，用于指图板，触摸板）。在事件详细信息中包含axis和axesChanged。axis是从-1.0（左，下）到1.0（右，上）的值的数组。")])]),t._v(" "),_("tr",[_("td",[t._v("按钮已更改")]),t._v(" "),_("td",[t._v("任何触摸或按下按钮都会触发此事件。")])]),t._v(" "),_("tr",[_("td",[t._v("按下按钮")]),t._v(" "),_("td",[t._v("按下按钮。")])]),t._v(" "),_("tr",[_("td",[t._v("纽扣")]),t._v(" "),_("td",[t._v("释放按钮。")])]),t._v(" "),_("tr",[_("td",[t._v("触摸开始")]),t._v(" "),_("td",[t._v("触摸感应按钮被触摸。")])]),t._v(" "),_("tr",[_("td",[t._v("触摸端")]),t._v(" "),_("td",[t._v("触敏按钮已释放。")])])])]),t._v(" "),_("h2",{attrs:{id:"更多资源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更多资源"}},[t._v("#")]),t._v(" 更多资源")]),t._v(" "),_("ul",[_("li",[t._v("游戏手柄API -W3C游戏手柄API")]),t._v(" "),_("li",[t._v("OpenVR -OpenVR文档")])])])}),[],!1,null,null,null);v.default=r.exports}}]);